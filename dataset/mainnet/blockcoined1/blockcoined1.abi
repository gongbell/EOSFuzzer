{"abi_extensions": [], "actions": [{"name": "close", "ricardian_contract": "## Signup Terms & Conditions\n\nI, {{by}} is acknowledging this action {{close}} will remove all tables under {{host}} scope and return ram to their assumed owners.\nI, {{by}} accept this action {{close}} will return tickets to their owners in equal amount of BLC tokens in blocointoken contract.\nI, {{by}} is acknowledging this action {{close}} will NOT return queues or turns back to challengers. All purchased queues through {{buyqueue}} action will be lost. This contract {{blockcoined1}} will with hold BLC tokens form blocointoken contract that has been exchanged for tickets that was used to purchase queues or turns.", "type": "close"}, {"name": "move", "ricardian_contract": "## Signup Terms & Conditions\n\nI, {{by}} is acknowledging the positions of {{cell_clicked1}} and {{cell_clicked2}} will swap in the {{host}} host's game.\nI, {{by}} accept the rest of the board will moving by the code of the blockcoined smart contract.\nI, {{by}} accept the score of this move is given by the code of the blockcoined smart contract.\nI, {{by}} is acknowledging another player can invoke {{stealturn}} action after 60 blocks has been passed starting at the block this {{move}} action is processed.\nI, {{by}} is acknowledging top table {{gamequeue}} row will be removed and ram will be returned to me {{by}}.", "type": "move"}, {"name": "createjgames", "ricardian_contract": "## Signup Terms & Conditions\n\nI, {{host}} is creating a new board game in this contract {{blockcoined1}} and creating 5 tables and assuming my own costs for RAM.\nI, {{host}} is acknowledging the ram is consumed after invoking the {{createjgames}} action and will be returned after I, {{host}} invoke close action in this contract.", "type": "createjgames"}, {"name": "joinhostgame", "ricardian_contract": "## Signup Terms & Conditions\n\nI, {{challenger}} is joining the game hosted already by another player and assuming my own costs for RAM for tracking my own game score and tickets in this {{host}} game.\nI, {{challenger}} is acknowledging the ram consumed after invoking the {{joingame}} action will be returned only after the host {{host}} invoke {{close}} action in this {{blockcoined1}} contract.", "type": "joinhostgame"}, {"name": "buyqueue", "ricardian_contract": "## Signup Terms & Conditions\n\nI, {{challenger}} is acknowledging that the {{quantity}} number of my ticket in {{host}} host's game will be exchanged for the same {{quantity}} number of queues or turns.\nI, {{challenger}} is acknowledging each queue or turn will be a new row entry to the queue table {{gamequeue}} which I, {{challenger}} will assume the ram cost.\nI, {{challenger}} is acknowledging the ram consumed after invoking the {{buyqueue}} action will not be able to be refunded back into tickets directly when the host invokes the {{close}} action and leave the game.", "type": "buyqueue"}, {"name": "stealturn", "ricardian_contract": "## Signup Terms & Conditions\n\nI, {{by}} is acknowledging the ram cost for the top row entry to the queue table {{gamequeue}} will assumed by me {{by}}.\nI, {{by}} is acknowledging another player can invoke {{stealturn}} action after 60 blocks has been passed starting at the block this {{move}} action is processed even after a {{stealturn}} action has been invoked by {{by}}.", "type": "stealturn"}, {"name": "refundtoken", "ricardian_contract": "## Signup Terms & Conditions\n\nI, {{by}} accept this action {{close}} will return tickets to their owners in equal amount of BLC tokens in blocointoken contract.\nI, {{by}} is acknowledging this action {{close}} will NOT return queues or turns back to challengers.", "type": "refundtoken"}], "error_messages": [], "ricardian_clauses": [], "structs": [{"base": "", "fields": [{"name": "challenger", "type": "name"}, {"name": "host", "type": "name"}, {"name": "turn", "type": "name"}, {"name": "winner", "type": "name"}, {"name": "board", "type": "uint8[]"}], "name": "game"}, {"base": "", "fields": [{"name": "challenger", "type": "name"}, {"name": "host", "type": "name"}], "name": "close"}, {"base": "", "fields": [{"name": "host", "type": "name"}, {"name": "by", "type": "name"}, {"name": "cell_clicked1", "type": "uint16"}, {"name": "cell_clicked2", "type": "uint16"}], "name": "move"}, {"base": "", "fields": [{"name": "host", "type": "name"}], "name": "createjgames"}, {"base": "", "fields": [{"name": "host", "type": "name"}, {"name": "challenger", "type": "name"}], "name": "joinhostgame"}, {"base": "", "fields": [{"name": "host", "type": "name"}, {"name": "buyer", "type": "name"}, {"name": "quantity", "type": "uint16"}], "name": "buyqueue"}, {"base": "", "fields": [{"name": "host", "type": "name"}, {"name": "by", "type": "name"}], "name": "stealturn"}, {"base": "", "fields": [{"name": "host", "type": "name"}, {"name": "challenger", "type": "name"}], "name": "refundtoken"}, {"base": "", "fields": [{"name": "host", "type": "name"}, {"name": "turn", "type": "name"}, {"name": "winner", "type": "name"}, {"name": "board", "type": "uint8[]"}, {"name": "board_index", "type": "uint16[]"}, {"name": "host_score", "type": "uint16"}, {"name": "Queue_pos", "type": "uint16"}, {"name": "Queue_pos_max", "type": "uint16"}, {"name": "Game_turn", "type": "uint16"}], "name": "block_jewel"}, {"base": "", "fields": [{"name": "challenger", "type": "name"}, {"name": "score", "type": "uint16"}], "name": "challenger_index"}, {"base": "", "fields": [{"name": "challenger", "type": "name"}, {"name": "index", "type": "uint16"}], "name": "game_queue_table"}, {"base": "", "fields": [{"name": "level", "type": "uint16"}, {"name": "orientation", "type": "uint16"}, {"name": "pos_num", "type": "uint16"}, {"name": "view", "type": "uint8[]"}, {"name": "empty", "type": "uint8[]"}, {"name": "board_index", "type": "uint16[]"}, {"name": "index", "type": "uint64"}], "name": "anima_index"}, {"base": "", "fields": [{"name": "num_ticket", "type": "uint16"}, {"name": "challenger", "type": "name"}], "name": "playertickets"}, {"base": "", "fields": [{"name": "tot_num_ticket", "type": "uint16"}, {"name": "host", "type": "name"}], "name": "gamelist"}], "tables": [{"index_type": "i64", "key_names": ["challenger"], "key_types": ["name"], "name": "games", "type": "game"}, {"index_type": "i64", "key_names": ["host"], "key_types": ["name"], "name": "jgames", "type": "block_jewel"}, {"index_type": "i64", "key_names": ["challenger"], "key_types": ["name"], "name": "challengers", "type": "challenger_index"}, {"index_type": "i64", "key_names": ["index"], "key_types": ["uint16"], "name": "gamequeue", "type": "game_queue_table"}, {"index_type": "i64", "key_names": ["index"], "key_types": ["uint16"], "name": "animaindex", "type": "anima_index"}, {"index_type": "i64", "key_names": ["challenger"], "key_types": ["name"], "name": "tickettable", "type": "playertickets"}, {"index_type": "i64", "key_names": ["host"], "key_types": ["name"], "name": "gamelist", "type": "gamelist"}], "types": [], "variants": [], "version": "eosio::abi/1.0"}