{"version": "eosio::abi/1.1", "types": [], "structs": [{"name": "betinfo", "base": "", "fields": [{"name": "user_id", "type": "uint64"}, {"name": "quantity", "type": "asset"}, {"name": "is_streamer", "type": "bool"}]}, {"name": "issuetokens", "base": "", "fields": [{"name": "user_id", "type": "uint64"}, {"name": "quantity", "type": "asset"}, {"name": "is_streamer", "type": "bool"}, {"name": "memo", "type": "string"}]}, {"name": "newuser", "base": "", "fields": [{"name": "ids", "type": "uint64[]"}, {"name": "is_streamer", "type": "bool"}]}, {"name": "pay2many", "base": "", "fields": [{"name": "user_id", "type": "uint64"}, {"name": "quantity", "type": "asset"}]}, {"name": "pay2one", "base": "", "fields": [{"name": "stake_id", "type": "uint64"}, {"name": "quantity", "type": "asset"}]}, {"name": "payfor", "base": "", "fields": [{"name": "user_id", "type": "uint64"}, {"name": "quantity", "type": "asset"}, {"name": "memo", "type": "string"}]}, {"name": "paymany2one", "base": "", "fields": [{"name": "user_id", "type": "uint64"}, {"name": "bets", "type": "pay2one[]"}, {"name": "memo", "type": "string"}]}, {"name": "payone2many", "base": "", "fields": [{"name": "stake_id", "type": "uint64"}, {"name": "winners", "type": "pay2many[]"}, {"name": "memo", "type": "string"}]}, {"name": "putstake", "base": "", "fields": [{"name": "event_id", "type": "uint64"}, {"name": "event_type", "type": "uint8"}, {"name": "bets", "type": "betinfo[]"}, {"name": "memo", "type": "string"}]}, {"name": "removeuser", "base": "", "fields": [{"name": "ids", "type": "uint64[]"}, {"name": "is_streamer", "type": "bool"}]}, {"name": "stake", "base": "", "fields": [{"name": "stake_id", "type": "uint64"}, {"name": "event_id", "type": "uint64"}, {"name": "user_id", "type": "uint64"}, {"name": "stake_amount", "type": "asset"}, {"name": "event_type", "type": "uint8"}, {"name": "is_streamer", "type": "bool"}]}, {"name": "transfer", "base": "", "fields": [{"name": "from_id", "type": "uint64"}, {"name": "to_id", "type": "uint64"}, {"name": "quantity", "type": "asset"}, {"name": "memo", "type": "string"}]}, {"name": "unstake", "base": "", "fields": [{"name": "bets", "type": "uint64[]"}, {"name": "memo", "type": "string"}]}, {"name": "user", "base": "", "fields": [{"name": "user_id", "type": "uint64"}, {"name": "balance", "type": "asset"}]}], "actions": [{"name": "issuetokens", "type": "issuetokens", "ricardian_contract": "{{if is_streamer == true}}\nI, Azarus oracle, issue {{quantity}} AZA coins to user with id {{user_id}}. These AZA coins are added to streamer's balance for creating a new challenges. Then they could be transferred to a users, who join a challenge, and provide right answers to challenge questions.\n{{else}}\nI, Azarus oracle, issue {{quantity}} AZA coins to user with id {{user_id}}. These AZA coins are added to user's balance for any legal use cases: buying redeem codes in Azarus shop; putting stakes on Azarus objectives; and transfer coins to another Azarus users.\n{{endif}}"}, {"name": "newuser", "type": "newuser", "ricardian_contract": "{{if is_streamer == true}}\nI, Azarus oracle, create a new streamer accounts with ids {{ids}} and set streamer's balances to zero. Streamer account is additional user account for a users, who would like to create their own streams, and invite other people, to join Azarus smart challenges. Streamer's balance is used only for creating new challenges. These tokens can not be spent for anything else except this legal case.\n{{else}}\nI, Azarus oracle, create a new user accounts with ids {{ids}} and set user's balances to zero.\n{{endif}}"}, {"name": "payfor", "type": "payfor", "ricardian_contract": "{{if oracle}}\nI, Azarus oracle, am acting on behalf of user {{user_id}}, and do payment of {{quantity}} amount of AZA coins from his account.\n{{endif}}\nI, user {{user_id}} understand and accept payment from my account {{quantity}} AZA coins for a good I buy in Azarus market. This transaction is done by my good will and accepted."}, {"name": "paymany2one", "type": "paymany2one", "ricardian_contract": "I, Azarus oracle, take users stakes from vector {{bets}}, and move up to {{quantity}} AZA coins from each stake is identified by {{stake_id}} to user account {{user_id}}."}, {"name": "payone2many", "type": "payone2many", "ricardian_contract": "I, Azarus oracle, take the streamer stake is identified by {{stake_id}} and distribute AZA coins among the users {{winners}}, who won a challenge. Each user, is identified by {{user_id}}, will receive at least {{quantity}} AZA coins on his user balance for any legal use cases: buying redeem codes in Azarus shop; putting stakes on Azarus objectives; and transfer coins to another Azarus users."}, {"name": "putstake", "type": "putstake", "ricardian_contract": "{{if is_streamer == true}}\n{{if oracle}}\nI, Azarus oracle, am acting on behalf of streamers are identified by {{user_id}}.\n{{endif}}\nI, streamer is identified by {{user_id}}, am creating the challenge {{event_id}} at the time {{Date.now()}}. I put {{quantity}} amount of AZA coins, I have on my Azarus streamer balance, to start the challenge {{event_id}}. I understand that up to {{quantity}} AZA coins may be transferred out of my streamer account as part of the challenge resolution. Upon resolution any non-transferred AZAs will be unstaked.\n{{endif}}\n{{else}}\n{{if oracle}}\nI, Azarus oracle, am acting on behalf of users are identified by {{user_id}}.\n{{endif}}\nI, user is identified by {{user_id}}, am entering the challenge {{event_id}} at the time {{Date.now()}}. I put {{quantity}} amount of AZA coins, I have on my Azarus user balance, to enter the challenge {{event_id}}. I understand that up to {{quantity}} AZA coins may be transferred out of my user account as part of the objective resolution. Upon resolution any non-transferred AZAs will be unstaked.\n{{endif}}"}, {"name": "removeuser", "type": "removeuser", "ricardian_contract": "{{if is_streamer == true}}\n{{if oracle}}\nI, Azarus oracle, am acting on behalf of streamers {{ids}}, completely remove streamer accounts for users, are identified by {{ids}}, from Azarus streamers base. I erase all streamer's stakes and all AZA coins, are owned by the streamers. User accounts, are assigned with these users, will not be erased, and may be used in future.\n{{endif}}\nI, streamer is identified by my id, initialized this process, cause I wish to completely erase my streamer's account. I understand, that the changes I asked for, can not be undone. And I accept this.\n{{else}}\n{{if oracle}}\nI, Azarus oracle, am acting on behalf of users {{ids}}, completely remove user accounts for users, are identified by {{ids}}, from Azarus users base. I erase all user's stakes and all AZA coins, are owned by the users. This financial information will permanently lost, with no ability to unwind the changes, were made, or recovery back any kind of user's information.\n{{endif}}\nI, user is identified by my id, initialized this process, cause I wish to completely erase my user's account. I understand, that the changes I asked for, can not be undone. And I accept this.\n{{endif}}"}, {"name": "transfer", "type": "transfer", "ricardian_contract": "{{if oracle}}\nI, Azarus oracle, am acting on behalf of user {{from_id}}, and do transfer of {{quantity}} amount of AZA coins from his account to another Azarus user account {{to_id}}.\n{{endif}}\nI, user {{from_id}} understand and accept transferring out of my account {{quantity}} AZA coins to another Azarus user account {{to_id}}. This transaction is done by my good will and accepted."}, {"name": "unstake", "type": "unstake", "ricardian_contract": "I, Azarus oracle, return back the user/streamer stakes are identified by {{bets}} vector, and update the user/streamer balances up to the stake amounts. I will erase the existing stake records from multi-index table, when these transactions are completed."}], "tables": [{"name": "stakes", "index_type": "i64", "key_names": [], "key_types": [], "type": "stake"}, {"name": "streamers", "index_type": "i64", "key_names": [], "key_types": [], "type": "user"}, {"name": "users", "index_type": "i64", "key_names": [], "key_types": [], "type": "user"}], "ricardian_clauses": [], "error_messages": [], "abi_extensions": [], "variants": []}