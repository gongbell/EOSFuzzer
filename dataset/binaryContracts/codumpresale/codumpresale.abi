{"abi_extensions": [], "actions": [{"name": "apply", "ricardian_contract": "# Action - `{{ apply }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ apply }}` action is necessary for `{{ contributorVar }}` to apply for the Fundraising/Token sale opportunity at `codumpresale`.\n`{{ contributorVar }}` also is required to set `{{ acceptedtermsVar }}` to value `1`, which means that `{{ contributorVar }}` has accepted CODUM TOKEN ACQUISITION AGREEMENT.\n\n### Inputs and Input Types\n\nThe `{{ apply }}` action requires the following `inputs` and `input types`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ apply }}` | `{{ contributorVar }}`<br/>`{{ acceptedtermsVar }}` | `{{ name }}`<br/>`{{ bool }}` |\n", "type": "apply"}, {"name": "approve", "ricardian_contract": "# Action - `{{ approve }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ approve }}` action can only be executed by `codumpresale` which approves `{{ contributorVar }}` to be eligible to participate in the codum Fundraising/CODUM Token sale round A.\n\n### Input and Input Type\n\nThe `{{ approve }}` action requires the following `input` and `input type`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ approve }}` | `{{ contributorVar }}` | `{{ name }}` |\n", "type": "approve"}, {"name": "buycodum", "ricardian_contract": "# Action - `{{ buycodum }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ buycodum }}` action submits the `{{ contributorVar }}`'s intent of ackquisition of Tokens managed by this contract. `{{ networkVar }}` must be set between 0 and 3, where 0 = EOS, 1 = EUR, 2 = USD and 3 = ETH. `{{ quantityVar }}` must be provided with 4 precision number, for example \"100.0000 EOS\" or \"1000.0000 EUR\", where symbol must match the `{{ networkVar }}`. `{{ memoVar }}` is also required and preferred to be unique. In order to guarantee uniquiness, it is recommended to execute buycodum through official CODUM fundraising website while logged in with Scatter at https://codum.io/fundraising/. The intent information is then being saved into `contribution` table as a record, where the preliminary network exchange rate and estimated Token allocation to `codum_dist` will also be set on the intent record. \nNote: `{{ contributorVar }}` account can only have up to 3 outstanding Token ackquisition intention records at any given point of time before they are validated. Intent record gets validated once `codumpresale` managers process the incoming funds for the Tokens.\n\n### Inputs and Input Types\n\nThe `{{ buycodum }}` action requires the following `inputs` and `input types`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ buycodum }}` | `{{ contributorVar }}`<br/>`{{ networkVar }}`<br/>`{{ quantityVar }}`<br/>`{{ memoVar }}` | `{{ name }}`<br/>`{{ uint8 }}`<br/>`{{ asset }}`<br/>`{{ string }}` |\n", "type": "buycodum"}, {"name": "validate", "ricardian_contract": "# Action - `{{ validate }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ validate }}` action validates the `contribution` with `{{ idVar }}` and sets if for distribution. It can only be executed by `codumpresale`. The `rate` will be updated from Token's `exrate` table and confirmed Token distribution allocation will be then set to `codum_dist`, together with bonus tokens allocated to `codum_bonus` if applicable. `{{ memoVar }}` must match the one set in the record for the action to succeed, and incoming transaction ID can be recorded if provided as `{{ transactionVar }}`. \n\n### Inputs and Input Types\n\nThe `{{ validate }}` action requires the following `inputs` and `input types`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ validate }}` | `{{ idVar }}`<br/>`{{ memoVar }}`<br/>`{{ transactionVar }}` | `{{ uint64 }}`<br/>`{{ string }}`<br/>`{{ string }}` |\n", "type": "validate"}, {"name": "deletetx", "ricardian_contract": "# Action - `{{ deletetx }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ deletetx }}` action allows `codumpresale` to delete unconfirmed Token acquisition intent from `contribution` table when `{{ idVar }}` is provided.\n\n### Input and Input Type\n\nThe `{{ deletetx }}` action requires the following `input` and `input type`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ deletetx }}` | `{{ idVar }}` | `{{ uint64 }}` |\n", "type": "deletetx"}, {"name": "distribute", "ricardian_contract": "# Action - `{{ distribute }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ distribute }}` action allows `codumpresale` to distribute tokens managed by this contract by the conditions set in the `contribution` table for the specific record, which is determined by `{{ idVar }}` provided. This action is only possible after `softcap` is reached. The `{{ idVar }}` record also needs to be `validated`, not yet `distributed` and not yet `refunded`. Tokens will be executed until `hardcap`, after which `{{ idVar }}` contribution will be set for `refund`.\n\n### Input and Input Type\n\nThe `{{ distribute }}` action requires the following `input` and `input type`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ distribute }}` | `{{ idVar }}` | `{{ uint64 }}` |\n", "type": "distribute"}, {"name": "refundsale", "ricardian_contract": "# Action - `{{ refundsale }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ refundsale }}` action confirms refund for `contribution` with `{{ id }}` `{{ idVar }}`. This action can only be executed by `codumpresale` and requires `contribution` record to be `validated` and not yet `refunded`. In case the `network` is 0 (EOS), the EOS transfer transaction with `quantity` is executed. Otherwise, `{{ refund_txVar }}` is required to be provided.\n\n### Inputs and Input Types\n\nThe `{{ refundsale }}` action requires the following `inputs` and `input types`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ refundsale }}` | `{{ idVar }}`<br/>`{{ refund_txVar }}` | `{{ uint64 }}`<br/>`{{ string }}` |\n", "type": "refundsale"}, {"name": "finish", "ricardian_contract": "# Action - `{{ finish }}`\n\nThis Contract is legally binding and can be used in the event of a dispute.\nDisputes shall be settled through the Lithuanian court of Commercial Arbitration as set in CODUM TOKEN ACQUISITION AGREEMENT.\nBy interacting with this contract you unconditionally agree with CODUM TOKEN ACQUISITION AGREEMENT. \nCODUM TOKEN ACQUISITION AGREEMENT can be found at https://codum.io/fundraising/terms/.\n\n### Description\n\nThe `{{ finish }}` action can only be executed by `codumpresale` and sets this Fundraising/Token sale round A to be complete. It can only be executed once `hardcap` is reached or sale `end`s. If `softcap` is not reached after `end` date and time, all `contribution` records are set for refund. The refunds will be processed afterwards manually. Otherwise, if `softcap` has been reached, this action cannot be executed until not `distributed` or not `refunded` but `validated` transactions exist in the `contribution` table.\n\n### Input and Input Type\n\nThe `{{ finish }}` action requires the following `input` and `input type`:\n\n| Action | Input | Input Type |\n|:--|:--|:--|\n| `{{ finish }}` | `{{ finishVar }}` | `{{ finish }}` |\n", "type": "finish"}], "error_messages": [], "ricardian_clauses": [], "structs": [{"base": "", "fields": [{"name": "contributor", "type": "name"}, {"name": "acceptedterms", "type": "bool"}, {"name": "approved", "type": "time"}], "name": "whitelist"}, {"base": "", "fields": [{"name": "id", "type": "uint64"}, {"name": "contributor", "type": "name"}, {"name": "network", "type": "uint8"}, {"name": "rate", "type": "uint32"}, {"name": "quantity", "type": "asset"}, {"name": "memo", "type": "string"}, {"name": "transaction", "type": "string"}, {"name": "datetime", "type": "time"}, {"name": "validated", "type": "time"}, {"name": "codum_dist", "type": "asset"}, {"name": "codum_bonus", "type": "asset"}, {"name": "distributed", "type": "time"}, {"name": "distrib_tx", "type": "string"}, {"name": "refund", "type": "asset"}, {"name": "refunded", "type": "time"}, {"name": "refund_tx", "type": "string"}], "name": "contribution"}, {"base": "", "fields": [{"name": "contributor", "type": "name"}, {"name": "acceptedterms", "type": "bool"}], "name": "apply"}, {"base": "", "fields": [{"name": "contributor", "type": "name"}], "name": "approve"}, {"base": "", "fields": [{"name": "contributor", "type": "name"}, {"name": "network", "type": "uint8"}, {"name": "quantity", "type": "asset"}, {"name": "memo", "type": "string"}], "name": "buycodum"}, {"base": "", "fields": [{"name": "id", "type": "uint64"}, {"name": "memo", "type": "string"}, {"name": "transaction", "type": "string"}], "name": "validate"}, {"base": "", "fields": [{"name": "id", "type": "uint64"}], "name": "deletetx"}, {"base": "", "fields": [{"name": "id", "type": "uint64"}], "name": "distribute"}, {"base": "", "fields": [{"name": "id", "type": "uint64"}, {"name": "refund_tx", "type": "string"}], "name": "refundsale"}, {"base": "", "fields": [], "name": "finish"}], "tables": [{"index_type": "i64", "key_names": ["contributor"], "key_types": ["name"], "name": "whitelist", "type": "whitelist"}, {"index_type": "i64", "key_names": ["id"], "key_types": ["uint64"], "name": "contribution", "type": "contribution"}], "types": [{"new_type_name": "time", "type": "uint32"}], "variants": [], "version": "eosio::abi/1.0"}