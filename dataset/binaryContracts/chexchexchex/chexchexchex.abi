{"abi_extensions": [], "actions": [{"name": "burn", "ricardian_contract": "**parameters**\n* __owner__\n* __quantity__\n\n**Intent**\nThe intent of {{burn}} is to permanently destroy {{quantity}} tokens belonging to {{owner}}. This will reduce the balance of the {{owner}} account by {{quantity}} and it will also reduce the {{supply}} and {{maximum_supply}} by the quantity as well.", "type": "burn"}, {"name": "close", "ricardian_contract": "**parameters**\n* __owner__\n* __symbol__\n\n**Intent**\nThe intent of {{close}} is to delete a table entry for a token with symbol {{symbol}} for the {{owner}}. The {ram_payer} will get their RAM back upon success. A table entry for the token data can only be closed if the user has no token balance.", "type": "close"}, {"name": "create", "ricardian_contract": "**Parameters**\n* __issuer__\n* __maximum_supply__\n\n**Intent**\nThe intent of {{create}} is to create a new token with a {{maximum_supply} as indicated. The format of the asset must include the correct number of decimal places, and the token symbol. For example, 1000000000.00000000 CHEX will create a supply of 1 billion CHEX tokens, with 8 decimal places of precision.", "type": "create"}, {"name": "issue", "ricardian_contract": "**Parameters**\n* __to__ \n* __quantity__\n* __memo__\n\n**Intent**\nThe intent of {{issue}} is to generate {{quantity}} new tokens and allocate them to the {{to}} account. New tokens can not be issued beyond the value of {{maximum_supply}}. The {{memo}} can be used to explain why the tokens are being issued.", "type": "issue"}, {"name": "lock", "ricardian_contract": "**parameters**\n* __owner__\n* __quantity__\n* __days__\n\n**Intent**\nThe intent of {{lock}} is to lock {{quantity}} tokens of {{owner}} for {{days}} days. When the tokens are locked, they can not be used. Only when the {{unlock}} action is called will the timer start for unlocking the locked tokens. You can lock different amounts of tokens for different amounts of time.", "type": "lock"}, {"name": "open", "ricardian_contract": "**parameters**\n* __owner__\n* __symbol__\n* __ram_payer__\n\n**Intent**\nThe intent of {{open}} is to create a table entry for a token with symbol {{symbol}} for the {{owner}}. The {ram_payer} pays the ram for the table entry.", "type": "open"}, {"name": "transfer", "ricardian_contract": "**Parameters**\n* __from__\n* __to__\n* __quantity__\n* __memo__\n\n**Intent**\nThe intent of {{transfer}} is to change the ownership of {{quantity}} tokens from the account {{from}} to the account {{to}}. Only unlocked tokens can be transferred. The {{memo}} can be used to explain why the tokens are being transferred.", "type": "transfer"}, {"name": "unlock", "ricardian_contract": "**parameters**\n* __owner__\n* __quantity__\n\n**Intent**\nThe intent of {{unlock}} is to move {{quantity}} locked tokens to the unlocked state, allowing the {{owner}} to use them. When tokens are unlocked, a timer starts to move them to the unlocked state. The timer takes an amount of time equal to {{days}}, which was determined when the tokens were locked. The first tokens to unlock are the ones with the shortest locking period.", "type": "unlock"}], "error_messages": [], "ricardian_clauses": [{"body": "This contract is intended for use with the CHEX token. The CHEX token is a utility token for the Chintai platform.", "id": "General Use"}], "structs": [{"base": "", "fields": [{"name": "balance", "type": "asset"}, {"name": "locked", "type": "asset"}], "name": "account"}, {"base": "", "fields": [{"name": "owner", "type": "name"}, {"name": "quantity", "type": "asset"}], "name": "burn"}, {"base": "", "fields": [{"name": "owner", "type": "name"}, {"name": "symbol", "type": "symbol"}], "name": "close"}, {"base": "", "fields": [{"name": "issuer", "type": "name"}, {"name": "maximum_supply", "type": "asset"}], "name": "create"}, {"base": "", "fields": [{"name": "supply", "type": "asset"}, {"name": "max_supply", "type": "asset"}, {"name": "issuer", "type": "name"}], "name": "currency_stats"}, {"base": "", "fields": [{"name": "to", "type": "name"}, {"name": "quantity", "type": "asset"}, {"name": "memo", "type": "string"}], "name": "issue"}, {"base": "", "fields": [{"name": "owner", "type": "name"}, {"name": "quantity", "type": "asset"}, {"name": "days", "type": "uint8"}], "name": "lock"}, {"base": "", "fields": [{"name": "lock_time", "type": "uint64"}, {"name": "quantity", "type": "asset"}], "name": "locked_fund"}, {"base": "", "fields": [{"name": "owner", "type": "name"}, {"name": "symbol", "type": "symbol"}, {"name": "ram_payer", "type": "name"}], "name": "open"}, {"base": "", "fields": [{"name": "from", "type": "name"}, {"name": "to", "type": "name"}, {"name": "quantity", "type": "asset"}, {"name": "memo", "type": "string"}], "name": "transfer"}, {"base": "", "fields": [{"name": "owner", "type": "name"}, {"name": "quantity", "type": "asset"}], "name": "unlock"}, {"base": "", "fields": [{"name": "id", "type": "uint64"}, {"name": "unlocked_at", "type": "time_point"}, {"name": "quantity", "type": "asset"}], "name": "unlocking_fund"}], "tables": [{"index_type": "i64", "key_names": [], "key_types": [], "name": "accounts", "type": "account"}, {"index_type": "i64", "key_names": [], "key_types": [], "name": "locked", "type": "locked_fund"}, {"index_type": "i64", "key_names": [], "key_types": [], "name": "stat", "type": "currency_stats"}, {"index_type": "i64", "key_names": [], "key_types": [], "name": "unlocking", "type": "unlocking_fund"}], "types": [], "variants": [], "version": "eosio::abi/1.1"}